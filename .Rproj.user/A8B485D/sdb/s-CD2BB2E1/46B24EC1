{
    "contents" : "\n\ntheURL<-\"http://apps.who.int/gho/athena/data/GHO/HIV_0000000001?profile=xtab&format=html&x-topaxis=GHO;YEAR&x-sideaxis=COUNTRY&x-title=table&filter=COUNTRY:*;REGION:*\"\nwebpage<-getURL(theURL) # loading the Url\n\n\ntc<-textConnection(webpage)# reading the url line by line\nwebpage<-readLines(tc)\nclose(tc)\n\npagetree<-htmlTreeParse(webpage,useInternalNodes=T)# noding the html code for parsing\nsecURL2<-unlist(xpathApply(pagetree,\"//*/table[@class='crosstable']\",xmlSize))# get the size of the table to be parsed\n\npath<-\"//*/table[@class='crosstable'][@style='width: 1899px;']\"\nsecURL<-unlist(xpathApply(pagetree,path)) \n\n\nsupplyData<-data.frame(\"ID\"=supplyD$ID)\nsupplyData$Project_Code<-as.character(supplyD$Project.Code)\nsupplyData$PO_SO<-as.character(supplyD$PO...SO..)\nsupplyData$ASN_DN<-as.character(supplyD$ASN.DN..)\nsupplyData$Country<-as.character(supplyD$Country)\nsupplyData$Managed_By<-as.character(supplyD$Managed.By)\nsupplyData$Fulfill_Via<-as.character(supplyD$Fulfill.Via)\nsupplyData$Shipment_Mode<-as.character(supplyD$Shipment.Mode)\nsupplyData<-deriveDates()\nsupplyData$Product_Group<-supplyD$Product.Group\nsupplyData$Vendor<-supplyD$Vendor\nsupplyData$Molecule_Test_Type<-supplyD$Molecule.Test.Type\nsupplyData<-dataProduct()\nsupplyData<-splitElements(supplyD$Molecule.Test.Type,supplyData,NA,\"test\",\"Molecule_First_Test\",\"Molecule_Second\",\"Molecule_Third\")\nsupplyData<-designateDosageUnit()\nsupplyData<-splitElements(supplyData$Dosage_Unit_mg,supplyData,\"0\",\"0\",\"Dosage_First\",\"Dosage_Second\",\"Dosage_Third\")\nsupplyData$Dosage_Form<-as.character(supplyD$Dosage.Form)\nsupplyData$Unit_of_Measure_Per_Pack<-as.numeric(supplyD$Unit.of.Measure..Per.Pack.)\nsupplyData$Line_Item_Quantity<-as.numeric(supplyD$Line.Item.Quantity)\nsupplyData$Pack_Price<-supplyD$Pack.Price\nsupplyData<-designateDonor()\nsupplyData$First_Line_Designation<-as.character(supplyD$First.Line.Designation)\nsupplyData$Weight_Kilograms<-as.numeric(as.character(supplyD$Weight..Kilograms.))\nsupplyData$Line_Item_Insurance<-as.numeric(supplyD$Line.Item.Insurance..USD.)\n\n\n\nsupplyData$Delivery_Time[is.na(supplyData$Delivery_Time)]<-0\nsupplyData$Delay_Time[is.na(supplyData$Delay_Time)]<-0\nsupplyData$Dosage_First[is.na(supplyData$Dosage_First)]<-0\nsupplyData$Dosage_Second[is.na(supplyData$Dosage_Second)]<-0\nsupplyData$Dosage_Third[is.na(supplyData$Dosage_Third)]<-0\nsupplyData$Unit_of_Measure_Per_Pack[is.na(supplyData$Unit_of_Measure_Per_Pack)]<-0\nsupplyData$Line_Item_Quantity[is.na(supplyData$Line_Item_Quantity)]<-0\nsupplyData$Pack_Price[is.na(supplyData$Pack_Price)]<-0\nsupplyData$Weight_Kilograms[is.na(supplyData$Weight_Kilograms)]<-0\nsupplyData$Line_Item_Insurance[is.na(supplyData$Line_Item_Insurance)]<-0\n\n\ncou<-c()\ncou2<-c()\nfor(i in 1:length(supplyData$Country)){\n  cou<-supplyData$Country[i]\n  \n  for(j in 1:length(finalData$country)){\n    cou2<-as.character(finalData$country[i])\n    if (cou!=cou2){\n      finalData<-finalData[-j,]\n    }\n    \n  }\n}\n\ndataN<-dataN[-4,]\ndataN<-dataN[-5,]\ndataN<-dataN[-11,]\ndataN<-dataN[-19,]\ndataN<-dataN[-21,]\n\n\nmergeData<-function(x,y,z){\n  cou<-c()\n  cou1<-c()\n  preval<-c()\n  cI<-c()\n  for(i in y:z){\n    cou<-as.character(supplyData$Country[i])\n    for(j in 1:length(x$Country)){\n      cou1<-as.character(x$Country[j])\n      if(cou==cou1){\n        if(as.numeric(supplyData$Year[i])>=2005 & as.numeric(supplyData$Year[i])<2009){\n          prev<-x[j,6]\n          cprev<-x[j,7]\n          \n        }\n        else if(as.numeric(supplyData$Year[i])>=2009 & as.numeric(supplyData$Year[i])<2013){\n          prev<-x[j,4]\n          cprev<-x[j,5]\n          \n        }\n        \n        else if(as.numeric(supplyData$Year[i])>=2013){\n          prev<-x[j,2]\n          cprev<-x[j,3]\n          \n        }\n        \n        else{\n          prev<-NA\n          cprev<-NA\n        }\n      }\n      \n      else{\n        prev<-NA\n        cprev<-NA\n      }\n      \n    }\n    preval<-c(preval,prev)\n    cI<-c(cI,cprev)\n    print(i)\n    \n  }\n  merge<-data.frame(\"A\"=preval,\"B\"=cI)\n  \n  merge\n}\n\ncontries<-levels(as.factor(supplyData$Country))\ncountries<-as.character(contries)\ncon<-c()\nfor(i in 1:length(countries)){\n  cou<-tolower(as.character(countries[i]))\n  for(j in 1:length(dataD$Country)){\n    cou1<-tolower(as.character(dataD$Country[j]))\n    if(cou==cou1){\n      asd<-cou\n      \n    }\n  }\n  con1<-c(con,asd)\n}\n\ncon\ncon1    \n\nmerfP<-mergeData(dataP,1,10324)\nmerfD<-mergeData(dataD,1,10324)\nmerfN<-mergeData(dataN,1,10324)\n\nmerfp2<-mergeData(dataP,1001,3000)\nmerfp3<-mergeData(dataP,3001,4000)\nmerfp4<-mergeData(dataP,4001,5000)\nmerfp5<-mergeData(dataP,5001,6000)\nmerfp6<-mergeData(dataP,6001,7000)\nmerfp7<-mergeData(dataP,7001,8000)\nmerfp8<-mergeData(dataP,8001,9000)\nmerfp9<-mergeData(dataP,9001,10324)",
    "created" : 1450288877287.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2099035746",
    "id" : "46B24EC1",
    "lastKnownWriteTime" : 27303570963497028,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}